<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hnie.blogbackstage.mybatis.mapper.TagMapper">
    <select id="getAllTag" resultType="com.hnie.blogbackstage.mybatis.entity.Tag">
        select *
        from `tag`;
    </select>
    <select id="getTagById" resultType="com.hnie.blogbackstage.mybatis.entity.Tag">
        select *
        from `tag`
        where `id` = #{id};
    </select>

    <select id="getTagByName" resultType="com.hnie.blogbackstage.mybatis.entity.Tag">
        select *
        from `tag`
        where `name` = #{name };
    </select>

    <insert id="addTag" parameterType="com.hnie.blogbackstage.mybatis.entity.Tag">
        insert into `tag`
        values (null, #{name});
    </insert>

    <delete id="deleteTag">
        delete
        from `tag`
        where `id` = #{id};
    </delete>

    <update id="updateTag" parameterType="com.hnie.blogbackstage.mybatis.entity.Tag">
        update `tag`
        set `id`=#{id},
            `name`=#{name}
        where `id` = #{id};
    </update>

    <select id="getTagsLimit" resultType="com.hnie.blogbackstage.mybatis.entity.Tag">
        select ta.id, ta.name
        from `tag` as ta
                 left outer join `blog_tag` as bt
                                 on bt.tagId = ta.id
        group by ta.id
        order by count(bt.id) limit 0,#{size};
    </select>

</mapper>